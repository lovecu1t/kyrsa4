import tkinter as tk
from tkinter import ttk, messagebox
import db


def open_call_form(parent, refresh_callback, call=None):
    """
    –í—ñ–∫–Ω–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–±–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤–∏–∫–ª–∏–∫—É
    param parent –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π —Ñ—Ä–µ–π–º
    param refresh_callback —Ñ—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
    param call —Å–ª–æ–≤–Ω–∏–∫ –∑ –¥–∞–Ω–∏–º–∏ –≤–∏–∫–ª–∏–∫—É (–¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è)
    """
    window = tk.Toplevel(parent)
    window.title("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –≤–∏–∫–ª–∏–∫—É" if call else "–ù–æ–≤–∏–π –≤–∏–∫–ª–∏–∫")
    window.geometry("400x350")
    window.resizable(False, False)

    #  –¥–æ–≤—ñ–¥–∫–æ–≤—ñ —Å–ø–∏—Å–∫–∏
    conn = db.get_connection()
    cur = conn.cursor()

    cur.execute("SELECT PatientID, Name || ' ' || Surname FROM Patient ORDER BY Name")
    patients = cur.fetchall()

    cur.execute("SELECT BrigadeID, Specialization FROM Brigade ORDER BY Specialization")
    brigades = cur.fetchall()

    cur.close()
    conn.close()

    # –≤–∏–ø–∞–¥–∞—é—á—ñ —Å–ø–∏—Å–∫–∏
    tk.Label(window, text="–ü–∞—Ü—ñ—î–Ω—Ç:").pack(pady=5)
    combo_patient = ttk.Combobox(window, values=[p[1] for p in patients], state="readonly")
    combo_patient.pack(fill="x", padx=20)

    tk.Label(window, text="–ë—Ä–∏–≥–∞–¥–∞:").pack(pady=5)
    combo_brigade = ttk.Combobox(window, values=[b[1] for b in brigades], state="readonly")
    combo_brigade.pack(fill="x", padx=20)

    tk.Label(window, text="–î–∞—Ç–∞ —ñ —á–∞—Å –≤–∏–∫–ª–∏–∫—É (YYYY-MM-DD HH:MM):").pack(pady=5)
    entry_time = ttk.Entry(window)
    entry_time.pack(fill="x", padx=20)

    tk.Label(window, text="–°–∏–º–ø—Ç–æ–º–∏:").pack(pady=5)
    entry_symptoms = ttk.Entry(window)
    entry_symptoms.pack(fill="x", padx=20)

    tk.Label(window, text="–°—Ç–∞—Ç—É—Å:").pack(pady=5)
    combo_status = ttk.Combobox(window, values=["–û—á—ñ–∫—É—î—Ç—å—Å—è", "–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è", "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"], state="readonly")
    combo_status.pack(fill="x", padx=20)

    # —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
    if call:
        combo_patient.set(call["patient"])
        combo_brigade.set(call["brigade"])
        entry_time.insert(0, call["calltime"])
        entry_symptoms.insert(0, call["symptoms"])
        combo_status.set(call["status"])

    def save_call():
        patient_name = combo_patient.get()
        brigade_name = combo_brigade.get()
        call_time = entry_time.get().strip()
        symptoms = entry_symptoms.get().strip()
        status = combo_status.get().strip()

        if not all([patient_name, brigade_name, call_time, symptoms, status]):
            return messagebox.showwarning("–ü–æ–º–∏–ª–∫–∞", "–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è!")

        # ID –∑–∞ –Ω–∞–∑–≤–æ—é
        patient_id = next((p[0] for p in patients if p[1] == patient_name), None)
        brigade_id = next((b[0] for b in brigades if b[1] == brigade_name), None)

        conn = db.get_connection()
        cur = conn.cursor()

        if call:
            cur.execute("""
                UPDATE Call
                SET PatientID=%s, BrigadeID=%s, CallTime=%s, Symptoms=%s, Status=%s
                WHERE CallID=%s
            """, (patient_id, brigade_id, call_time, symptoms, status, call["id"]))
        else:
            cur.execute("""
                INSERT INTO Call (PatientID, BrigadeID, CallTime, Symptoms, Status)
                VALUES (%s, %s, %s, %s, %s)
            """, (patient_id, brigade_id, call_time, symptoms, status))

        conn.commit()
        cur.close()
        conn.close()

        refresh_callback()
        window.destroy()

    ttk.Button(window, text="üíæ –ó–±–µ—Ä–µ–≥—Ç–∏", command=save_call).pack(pady=10)
